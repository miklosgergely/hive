PREHOOK: query: drop table over10k_n15
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table over10k_n15
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table over10k_n15(
           t tinyint,
           si smallint,
           i int,
           b bigint,
           f float,
           d double,
           bo boolean,
           s string,
           ts timestamp,
           `dec` decimal(4,2),
           bin binary)
       row format delimited
       fields terminated by '|'
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@over10k_n15
POSTHOOK: query: create table over10k_n15(
           t tinyint,
           si smallint,
           i int,
           b bigint,
           f float,
           d double,
           bo boolean,
           s string,
           ts timestamp,
           `dec` decimal(4,2),
           bin binary)
       row format delimited
       fields terminated by '|'
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@over10k_n15
PREHOOK: query: load data local inpath '../../data/files/over10k' into table over10k_n15
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@over10k_n15
POSTHOOK: query: load data local inpath '../../data/files/over10k' into table over10k_n15
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@over10k_n15
PREHOOK: query: explain
select distinct first_value(t) over ( partition by si order by i ) from over10k_n15 limit 10
PREHOOK: type: QUERY
PREHOOK: Input: default@over10k_n15
#### A masked pattern was here ####
POSTHOOK: query: explain
select distinct first_value(t) over ( partition by si order by i ) from over10k_n15 limit 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@over10k_n15
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: over10k_n15
                  Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: si (type: smallint), i (type: int)
                    null sort order: az
                    sort order: ++
                    Map-reduce partition columns: si (type: smallint)
                    Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                    value expressions: t (type: tinyint)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: tinyint), KEY.reducesinkkey0 (type: smallint), KEY.reducesinkkey1 (type: int)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                PTF Operator
                  Function definitions:
                      Input definition
                        input alias: ptf_0
                        output shape: _col0: tinyint, _col1: smallint, _col2: int
                        type: WINDOWING
                      Windowing table definition
                        input alias: ptf_1
                        name: windowingtablefunction
                        order by: _col2 ASC NULLS LAST
                        partition by: _col1
                        raw input shape:
                        window functions:
                            window function definition
                              alias: first_value_window_0
                              arguments: _col0
                              name: first_value
                              window function: GenericUDAFFirstValueEvaluator
                              window frame: RANGE PRECEDING(MAX)~CURRENT
                  Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                  Top N Key Operator
                    sort order: +
                    keys: first_value_window_0 (type: tinyint)
                    null sort order: z
                    Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                    top n: 10
                    Select Operator
                      expressions: first_value_window_0 (type: tinyint)
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                      Group By Operator
                        keys: _col0 (type: tinyint)
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                        Reduce Output Operator
                          key expressions: _col0 (type: tinyint)
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: tinyint)
                          Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                          TopN Hash Memory Usage: 0.1
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: tinyint)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 10
                  Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 10
      Processor Tree:
        ListSink

PREHOOK: query: select distinct first_value(t) over ( partition by si order by i ) from over10k_n15 limit 10
PREHOOK: type: QUERY
PREHOOK: Input: default@over10k_n15
#### A masked pattern was here ####
POSTHOOK: query: select distinct first_value(t) over ( partition by si order by i ) from over10k_n15 limit 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@over10k_n15
#### A masked pattern was here ####
-2
0
1
2
7
8
11
13
21
22
PREHOOK: query: explain
select distinct last_value(i) over ( partition by si order by i )
from over10k_n15 limit 10
PREHOOK: type: QUERY
PREHOOK: Input: default@over10k_n15
#### A masked pattern was here ####
POSTHOOK: query: explain
select distinct last_value(i) over ( partition by si order by i )
from over10k_n15 limit 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@over10k_n15
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: over10k_n15
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: si (type: smallint), i (type: int)
                    null sort order: az
                    sort order: ++
                    Map-reduce partition columns: si (type: smallint)
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: smallint), KEY.reducesinkkey1 (type: int)
                outputColumnNames: _col1, _col2
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                PTF Operator
                  Function definitions:
                      Input definition
                        input alias: ptf_0
                        output shape: _col1: smallint, _col2: int
                        type: WINDOWING
                      Windowing table definition
                        input alias: ptf_1
                        name: windowingtablefunction
                        order by: _col2 ASC NULLS LAST
                        partition by: _col1
                        raw input shape:
                        window functions:
                            window function definition
                              alias: last_value_window_0
                              arguments: _col2
                              name: last_value
                              window function: GenericUDAFLastValueEvaluator
                              window frame: RANGE PRECEDING(MAX)~CURRENT
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  Top N Key Operator
                    sort order: +
                    keys: last_value_window_0 (type: int)
                    null sort order: z
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                    top n: 10
                    Select Operator
                      expressions: last_value_window_0 (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                      Group By Operator
                        keys: _col0 (type: int)
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                        Reduce Output Operator
                          key expressions: _col0 (type: int)
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: int)
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                          TopN Hash Memory Usage: 0.1
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: int)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 10
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 10
      Processor Tree:
        ListSink

PREHOOK: query: select distinct last_value(i) over ( partition by si order by i )
from over10k_n15 limit 10
PREHOOK: type: QUERY
PREHOOK: Input: default@over10k_n15
#### A masked pattern was here ####
POSTHOOK: query: select distinct last_value(i) over ( partition by si order by i )
from over10k_n15 limit 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@over10k_n15
#### A masked pattern was here ####
65536
65537
65541
65542
65543
65544
65545
65538
65539
65540
PREHOOK: query: explain
select distinct last_value(i) over ( partition by si order by i ),
                first_value(t)  over ( partition by si order by i )
from over10k_n15 limit 50
PREHOOK: type: QUERY
PREHOOK: Input: default@over10k_n15
#### A masked pattern was here ####
POSTHOOK: query: explain
select distinct last_value(i) over ( partition by si order by i ),
                first_value(t)  over ( partition by si order by i )
from over10k_n15 limit 50
POSTHOOK: type: QUERY
POSTHOOK: Input: default@over10k_n15
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: over10k_n15
                  Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: si (type: smallint), i (type: int)
                    null sort order: az
                    sort order: ++
                    Map-reduce partition columns: si (type: smallint)
                    Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                    value expressions: t (type: tinyint)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: tinyint), KEY.reducesinkkey0 (type: smallint), KEY.reducesinkkey1 (type: int)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                PTF Operator
                  Function definitions:
                      Input definition
                        input alias: ptf_0
                        output shape: _col0: tinyint, _col1: smallint, _col2: int
                        type: WINDOWING
                      Windowing table definition
                        input alias: ptf_1
                        name: windowingtablefunction
                        order by: _col2 ASC NULLS LAST
                        partition by: _col1
                        raw input shape:
                        window functions:
                            window function definition
                              alias: last_value_window_0
                              arguments: _col2
                              name: last_value
                              window function: GenericUDAFLastValueEvaluator
                              window frame: RANGE PRECEDING(MAX)~CURRENT
                            window function definition
                              alias: first_value_window_1
                              arguments: _col0
                              name: first_value
                              window function: GenericUDAFFirstValueEvaluator
                              window frame: RANGE PRECEDING(MAX)~CURRENT
                  Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                  Top N Key Operator
                    sort order: ++
                    keys: last_value_window_0 (type: int), first_value_window_1 (type: tinyint)
                    null sort order: zz
                    Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                    top n: 50
                    Select Operator
                      expressions: last_value_window_0 (type: int), first_value_window_1 (type: tinyint)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                      Group By Operator
                        keys: _col0 (type: int), _col1 (type: tinyint)
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                        Reduce Output Operator
                          key expressions: _col0 (type: int), _col1 (type: tinyint)
                          null sort order: zz
                          sort order: ++
                          Map-reduce partition columns: _col0 (type: int), _col1 (type: tinyint)
                          Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                          TopN Hash Memory Usage: 0.1
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: int), KEY._col1 (type: tinyint)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 50
                  Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 50
      Processor Tree:
        ListSink

PREHOOK: query: select distinct last_value(i) over ( partition by si order by i ),
                first_value(t)  over ( partition by si order by i )
from over10k_n15 limit 50
PREHOOK: type: QUERY
PREHOOK: Input: default@over10k_n15
#### A masked pattern was here ####
POSTHOOK: query: select distinct last_value(i) over ( partition by si order by i ),
                first_value(t)  over ( partition by si order by i )
from over10k_n15 limit 50
POSTHOOK: type: QUERY
POSTHOOK: Input: default@over10k_n15
#### A masked pattern was here ####
65536	-2
65536	13
65536	18
65536	22
65536	23
65536	56
65536	69
65536	75
65536	84
65536	95
65536	104
65536	111
65536	114
65536	121
65537	4
65537	9
65537	11
65537	18
65537	38
65537	51
65537	54
65537	56
65537	57
65537	70
65537	72
65537	89
65537	102
65537	105
65538	6
65538	12
65538	40
65538	58
65538	97
65538	101
65538	102
65538	109
65539	1
65539	46
65539	66
65540	4
65540	11
65540	44
65540	45
65540	51
65540	55
65540	57
65540	75
65540	108
65541	21
65541	25
