PREHOOK: query: CREATE TABLE dest1_n42(key INT, value STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@dest1_n42
POSTHOOK: query: CREATE TABLE dest1_n42(key INT, value STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dest1_n42
PREHOOK: query: EXPLAIN
FROM (
  FROM src
  SELECT TRANSFORM(src.key, src.value)
         USING 'cat' AS (tkey, tvalue) 
  CLUSTER BY tkey 
) tmap
INSERT OVERWRITE TABLE dest1_n42 SELECT tmap.tkey, tmap.tvalue WHERE tmap.tkey < 100
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@dest1_n42
POSTHOOK: query: EXPLAIN
FROM (
  FROM src
  SELECT TRANSFORM(src.key, src.value)
         USING 'cat' AS (tkey, tvalue) 
  CLUSTER BY tkey 
) tmap
INSERT OVERWRITE TABLE dest1_n42 SELECT tmap.tkey, tmap.tvalue WHERE tmap.tkey < 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@dest1_n42
Plan not optimized by CBO because the statement has cluster by; uses scripts

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)

Stage-3
  Stats Work{}
    Stage-0
      Move Operator
        table:{"name:":"default.dest1_n42"}
        Stage-2
          Dependency Collection{}
            Stage-1
              Reducer 3
              File Output Operator [FS_15]
                Group By Operator [GBY_13] (rows=1 width=880)
                  Output:["_col0","_col1"],aggregations:["compute_stats(VALUE._col0)","compute_stats(VALUE._col1)"]
                <-Reducer 2 [CUSTOM_SIMPLE_EDGE]
                  File Output Operator [FS_8]
                    table:{"name:":"default.dest1_n42"}
                    Select Operator [SEL_4] (rows=166 width=95)
                      Output:["_col0","_col1"]
                    <-Map 1 [SIMPLE_EDGE]
                      SHUFFLE [RS_3]
                        PartitionCols:_col0
                        Filter Operator [FIL_16] (rows=166 width=178)
                          predicate:(_col0 < 100)
                          Transform Operator [SCR_2] (rows=500 width=178)
                            command:cat
                            Select Operator [SEL_1] (rows=500 width=178)
                              Output:["_col0","_col1"]
                              TableScan [TS_0] (rows=500 width=178)
                                default@src,src,Tbl:COMPLETE,Col:COMPLETE,Output:["key","value"]
                  PARTITION_ONLY_SHUFFLE [RS_12]
                    Group By Operator [GBY_11] (rows=1 width=864)
                      Output:["_col0","_col1"],aggregations:["compute_stats(key, 'hll')","compute_stats(value, 'hll')"]
                      Select Operator [SEL_10] (rows=166 width=95)
                        Output:["key","value"]
                         Please refer to the previous Select Operator [SEL_4]

PREHOOK: query: FROM (
  FROM src
  SELECT TRANSFORM(src.key, src.value)
         USING 'cat' AS (tkey, tvalue) 
  CLUSTER BY tkey 
) tmap
INSERT OVERWRITE TABLE dest1_n42 SELECT tmap.tkey, tmap.tvalue WHERE tmap.tkey < 100
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@dest1_n42
POSTHOOK: query: FROM (
  FROM src
  SELECT TRANSFORM(src.key, src.value)
         USING 'cat' AS (tkey, tvalue) 
  CLUSTER BY tkey 
) tmap
INSERT OVERWRITE TABLE dest1_n42 SELECT tmap.tkey, tmap.tvalue WHERE tmap.tkey < 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@dest1_n42
POSTHOOK: Lineage: dest1_n42.key SCRIPT [(src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest1_n42.value SCRIPT [(src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: SELECT dest1_n42.* FROM dest1_n42
PREHOOK: type: QUERY
PREHOOK: Input: default@dest1_n42
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT dest1_n42.* FROM dest1_n42
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest1_n42
POSTHOOK: Output: hdfs://### HDFS PATH ###
0	val_0
0	val_0
0	val_0
10	val_10
11	val_11
12	val_12
12	val_12
15	val_15
15	val_15
17	val_17
18	val_18
18	val_18
19	val_19
2	val_2
20	val_20
24	val_24
24	val_24
26	val_26
26	val_26
27	val_27
28	val_28
30	val_30
33	val_33
34	val_34
35	val_35
35	val_35
35	val_35
37	val_37
37	val_37
4	val_4
41	val_41
42	val_42
42	val_42
43	val_43
44	val_44
47	val_47
5	val_5
5	val_5
5	val_5
51	val_51
51	val_51
53	val_53
54	val_54
57	val_57
58	val_58
58	val_58
64	val_64
65	val_65
66	val_66
67	val_67
67	val_67
69	val_69
70	val_70
70	val_70
70	val_70
72	val_72
72	val_72
74	val_74
76	val_76
76	val_76
77	val_77
78	val_78
8	val_8
80	val_80
82	val_82
83	val_83
83	val_83
84	val_84
84	val_84
85	val_85
86	val_86
87	val_87
9	val_9
90	val_90
90	val_90
90	val_90
92	val_92
95	val_95
95	val_95
96	val_96
97	val_97
97	val_97
98	val_98
98	val_98
