PREHOOK: query: CREATE TABLE dest1_n13(key INT, value STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@dest1_n13
POSTHOOK: query: CREATE TABLE dest1_n13(key INT, value STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dest1_n13
PREHOOK: query: EXPLAIN
FROM (
  FROM src
  SELECT TRANSFORM(src.key, src.value)
         USING 'cat' AS (tkey, tvalue) 
  CLUSTER BY tkey LIMIT 20
) tmap
INSERT OVERWRITE TABLE dest1_n13 SELECT tmap.tkey, tmap.tvalue WHERE tmap.tkey < 100
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@dest1_n13
POSTHOOK: query: EXPLAIN
FROM (
  FROM src
  SELECT TRANSFORM(src.key, src.value)
         USING 'cat' AS (tkey, tvalue) 
  CLUSTER BY tkey LIMIT 20
) tmap
INSERT OVERWRITE TABLE dest1_n13 SELECT tmap.tkey, tmap.tvalue WHERE tmap.tkey < 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@dest1_n13
Plan not optimized by CBO because the statement has cluster by; uses scripts

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (SIMPLE_EDGE)

Stage-3
  Stats Work{}
    Stage-0
      Move Operator
        table:{"name:":"default.dest1_n13"}
        Stage-2
          Dependency Collection{}
            Stage-1
              Reducer 3 vectorized
              File Output Operator [FS_25]
                table:{"name:":"default.dest1_n13"}
                Select Operator [SEL_24] (rows=6 width=95)
                  Output:["_col0","_col1"]
                  Filter Operator [FIL_23] (rows=6 width=178)
                    predicate:(_col0 < 100)
                    Limit [LIM_22] (rows=20 width=178)
                      Number of rows:20
                      Select Operator [SEL_21] (rows=20 width=178)
                        Output:["_col0","_col1"]
                      <-Reducer 2 [SIMPLE_EDGE] vectorized
                        SHUFFLE [RS_20]
                          PartitionCols:_col0
                          Top N Key Operator [TNK_19] (rows=20 width=178)
                            keys:_col0,top n:20
                            Limit [LIM_18] (rows=20 width=178)
                              Number of rows:20
                              Select Operator [SEL_17] (rows=500 width=178)
                                Output:["_col0","_col1"]
                              <-Map 1 [SIMPLE_EDGE]
                                SHUFFLE [RS_3]
                                  PartitionCols:_col0
                                  Top N Key Operator [TNK_15] (rows=500 width=178)
                                    keys:_col0,top n:20
                                    Transform Operator [SCR_2] (rows=500 width=178)
                                      command:cat
                                      Select Operator [SEL_1] (rows=500 width=178)
                                        Output:["_col0","_col1"]
                                        TableScan [TS_0] (rows=500 width=178)
                                          default@src,src,Tbl:COMPLETE,Col:COMPLETE,Output:["key","value"]

PREHOOK: query: FROM (
  FROM src
  SELECT TRANSFORM(src.key, src.value)
         USING 'cat' AS (tkey, tvalue) 
  CLUSTER BY tkey LIMIT 20
) tmap
INSERT OVERWRITE TABLE dest1_n13 SELECT tmap.tkey, tmap.tvalue WHERE tmap.tkey < 100
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@dest1_n13
POSTHOOK: query: FROM (
  FROM src
  SELECT TRANSFORM(src.key, src.value)
         USING 'cat' AS (tkey, tvalue) 
  CLUSTER BY tkey LIMIT 20
) tmap
INSERT OVERWRITE TABLE dest1_n13 SELECT tmap.tkey, tmap.tvalue WHERE tmap.tkey < 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@dest1_n13
POSTHOOK: Lineage: dest1_n13.key SCRIPT [(src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest1_n13.value SCRIPT [(src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: SELECT dest1_n13.* FROM dest1_n13
PREHOOK: type: QUERY
PREHOOK: Input: default@dest1_n13
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT dest1_n13.* FROM dest1_n13
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest1_n13
POSTHOOK: Output: hdfs://### HDFS PATH ###
0	val_0
0	val_0
0	val_0
10	val_10
11	val_11
