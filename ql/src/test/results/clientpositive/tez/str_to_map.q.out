PREHOOK: query: desc function str_to_map
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: desc function str_to_map
POSTHOOK: type: DESCFUNCTION
str_to_map(text, delimiter1, delimiter2) - Creates a map by parsing text 
PREHOOK: query: desc function extended str_to_map
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: desc function extended str_to_map
POSTHOOK: type: DESCFUNCTION
str_to_map(text, delimiter1, delimiter2) - Creates a map by parsing text 
Split text into key-value pairs using two delimiters. The first delimiter separates pairs, and the second delimiter sperates key and value. If only one parameter is given, default delimiters are used: ',' as delimiter1 and ':' as delimiter2.
Function class:org.apache.hadoop.hive.ql.udf.generic.GenericUDFStringToMap
Function type:BUILTIN
PREHOOK: query: explain select str_to_map('a=1,b=2,c=3',',','=')['a'] from src limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain select str_to_map('a=1,b=2,c=3',',','=')['a'] from src limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Stage-0
  Fetch Operator
    limit:3
    Limit [LIM_2]
      Number of rows:3
      Select Operator [SEL_1]
        Output:["_col0"]
        TableScan [TS_0]

PREHOOK: query: select str_to_map('a=1,b=2,c=3',',','=')['a'] from src limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select str_to_map('a=1,b=2,c=3',',','=')['a'] from src limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: hdfs://### HDFS PATH ###
1
1
1
PREHOOK: query: explain select str_to_map('a:1,b:2,c:3') from src limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain select str_to_map('a:1,b:2,c:3') from src limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Stage-0
  Fetch Operator
    limit:3
    Limit [LIM_2]
      Number of rows:3
      Select Operator [SEL_1]
        Output:["_col0"]
        TableScan [TS_0]

PREHOOK: query: select str_to_map('a:1,b:2,c:3') from src limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select str_to_map('a:1,b:2,c:3') from src limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: hdfs://### HDFS PATH ###
{"a":"1","b":"2","c":"3"}
{"a":"1","b":"2","c":"3"}
{"a":"1","b":"2","c":"3"}
PREHOOK: query: explain select str_to_map('a:1,b:2,c:3',',',':') from src limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain select str_to_map('a:1,b:2,c:3',',',':') from src limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Stage-0
  Fetch Operator
    limit:3
    Limit [LIM_2]
      Number of rows:3
      Select Operator [SEL_1]
        Output:["_col0"]
        TableScan [TS_0]

PREHOOK: query: select str_to_map('a:1,b:2,c:3',',',':') from src limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select str_to_map('a:1,b:2,c:3',',',':') from src limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: hdfs://### HDFS PATH ###
{"a":"1","b":"2","c":"3"}
{"a":"1","b":"2","c":"3"}
{"a":"1","b":"2","c":"3"}
PREHOOK: query: explain select str_to_map(t.ss,',',':')['a']
from (select transform('a:1,b:2,c:3') using 'cat' as (ss) from src) t
limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain select str_to_map(t.ss,',',':')['a']
from (select transform('a:1,b:2,c:3') using 'cat' as (ss) from src) t
limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan not optimized by CBO because the statement uses scripts

Stage-0
  Fetch Operator
    limit:3
    Stage-1
      Map 1
      File Output Operator [FS_5]
        Limit [LIM_4] (rows=3 width=184)
          Number of rows:3
          Select Operator [SEL_3] (rows=500 width=184)
            Output:["_col0"]
            Transform Operator [SCR_2] (rows=500 width=95)
              command:cat
              Select Operator [SEL_1] (rows=500 width=95)
                Output:["_col0"]
                TableScan [TS_0] (rows=500 width=10)
                  default@src,src,Tbl:COMPLETE,Col:COMPLETE

PREHOOK: query: select str_to_map(t.ss,',',':')['a']
from (select transform('a:1,b:2,c:3') using 'cat' as (ss) from src) t
limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select str_to_map(t.ss,',',':')['a']
from (select transform('a:1,b:2,c:3') using 'cat' as (ss) from src) t
limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: hdfs://### HDFS PATH ###
1
1
1
PREHOOK: query: drop table tbl_s2m
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table tbl_s2m
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table tbl_s2m as select 'ABC=CC_333=444' as t from src tablesample (3 rows)
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@tbl_s2m
POSTHOOK: query: create table tbl_s2m as select 'ABC=CC_333=444' as t from src tablesample (3 rows)
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tbl_s2m
POSTHOOK: Lineage: tbl_s2m.t SIMPLE []
PREHOOK: query: select str_to_map(t,'_','=')['333'] from tbl_s2m
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl_s2m
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select str_to_map(t,'_','=')['333'] from tbl_s2m
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl_s2m
POSTHOOK: Output: hdfs://### HDFS PATH ###
444
444
444
PREHOOK: query: drop table tbl_s2m
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@tbl_s2m
PREHOOK: Output: default@tbl_s2m
POSTHOOK: query: drop table tbl_s2m
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@tbl_s2m
POSTHOOK: Output: default@tbl_s2m
