PREHOOK: query: EXPLAIN
FROM (
  FROM src
  SELECT TRANSFORM(src.key, src.value)
         USING 'cat' AS (tkey, tvalue) 
  CLUSTER BY tkey 
) tmap
SELECT tmap.tkey, tmap.tvalue WHERE tmap.tkey < 100
PREHOOK: type: QUERY
PREHOOK: Input: cat
PREHOOK: Input: default@src
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: EXPLAIN
FROM (
  FROM src
  SELECT TRANSFORM(src.key, src.value)
         USING 'cat' AS (tkey, tvalue) 
  CLUSTER BY tkey 
) tmap
SELECT tmap.tkey, tmap.tvalue WHERE tmap.tkey < 100
POSTHOOK: type: QUERY
POSTHOOK: Input: cat
POSTHOOK: Input: default@src
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan not optimized by CBO because the statement has cluster by; uses scripts

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 vectorized
      File Output Operator [FS_11]
        Filter Operator [FIL_10] (rows=166 width=178)
          predicate:(_col0 < 100)
          Select Operator [SEL_9] (rows=500 width=178)
            Output:["_col0","_col1"]
          <-Map 1 [SIMPLE_EDGE]
            SHUFFLE [RS_3]
              PartitionCols:_col0
              Transform Operator [SCR_2] (rows=500 width=178)
                command:cat
                Select Operator [SEL_1] (rows=500 width=178)
                  Output:["_col0","_col1"]
                  TableScan [TS_0] (rows=500 width=178)
                    default@src,src,Tbl:COMPLETE,Col:COMPLETE,Output:["key","value"]

PREHOOK: query: FROM (
  FROM src
  SELECT TRANSFORM(src.key, src.value)
         USING 'cat' AS (tkey, tvalue) 
  CLUSTER BY tkey 
) tmap
SELECT tmap.tkey, tmap.tvalue WHERE tmap.tkey < 100
PREHOOK: type: QUERY
PREHOOK: Input: cat
PREHOOK: Input: default@src
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: FROM (
  FROM src
  SELECT TRANSFORM(src.key, src.value)
         USING 'cat' AS (tkey, tvalue) 
  CLUSTER BY tkey 
) tmap
SELECT tmap.tkey, tmap.tvalue WHERE tmap.tkey < 100
POSTHOOK: type: QUERY
POSTHOOK: Input: cat
POSTHOOK: Input: default@src
POSTHOOK: Output: hdfs://### HDFS PATH ###
0	val_0
0	val_0
0	val_0
10	val_10
11	val_11
12	val_12
12	val_12
15	val_15
15	val_15
17	val_17
18	val_18
18	val_18
19	val_19
2	val_2
20	val_20
24	val_24
24	val_24
26	val_26
26	val_26
27	val_27
28	val_28
30	val_30
33	val_33
34	val_34
35	val_35
35	val_35
35	val_35
37	val_37
37	val_37
4	val_4
41	val_41
42	val_42
42	val_42
43	val_43
44	val_44
47	val_47
5	val_5
5	val_5
5	val_5
51	val_51
51	val_51
53	val_53
54	val_54
57	val_57
58	val_58
58	val_58
64	val_64
65	val_65
66	val_66
67	val_67
67	val_67
69	val_69
70	val_70
70	val_70
70	val_70
72	val_72
72	val_72
74	val_74
76	val_76
76	val_76
77	val_77
78	val_78
8	val_8
80	val_80
82	val_82
83	val_83
83	val_83
84	val_84
84	val_84
85	val_85
86	val_86
87	val_87
9	val_9
90	val_90
90	val_90
90	val_90
92	val_92
95	val_95
95	val_95
96	val_96
97	val_97
97	val_97
98	val_98
98	val_98
PREHOOK: query: EXPLAIN
FROM (
  FROM src
  SELECT TRANSFORM(src.key, src.value)
         USING 'cat' AS (tkey, tvalue) 
  CLUSTER BY tkey 
) tmap
SELECT tmap.tkey, tmap.tvalue WHERE tmap.tkey < 100
PREHOOK: type: QUERY
PREHOOK: Input: cat
PREHOOK: Input: default@src
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: EXPLAIN
FROM (
  FROM src
  SELECT TRANSFORM(src.key, src.value)
         USING 'cat' AS (tkey, tvalue) 
  CLUSTER BY tkey 
) tmap
SELECT tmap.tkey, tmap.tvalue WHERE tmap.tkey < 100
POSTHOOK: type: QUERY
POSTHOOK: Input: cat
POSTHOOK: Input: default@src
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan not optimized by CBO because the statement has cluster by; uses scripts

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 vectorized
      File Output Operator [FS_11]
        Select Operator [SEL_10] (rows=166 width=178)
          Output:["_col0","_col1"]
        <-Map 1 [SIMPLE_EDGE]
          SHUFFLE [RS_3]
            PartitionCols:_col0
            Filter Operator [FIL_8] (rows=166 width=178)
              predicate:(_col0 < 100)
              Transform Operator [SCR_2] (rows=500 width=178)
                command:cat
                Select Operator [SEL_1] (rows=500 width=178)
                  Output:["_col0","_col1"]
                  TableScan [TS_0] (rows=500 width=178)
                    default@src,src,Tbl:COMPLETE,Col:COMPLETE,Output:["key","value"]

PREHOOK: query: FROM (
  FROM src
  SELECT TRANSFORM(src.key, src.value)
         USING 'cat' AS (tkey, tvalue) 
  CLUSTER BY tkey 
) tmap
SELECT tmap.tkey, tmap.tvalue WHERE tmap.tkey < 100
PREHOOK: type: QUERY
PREHOOK: Input: cat
PREHOOK: Input: default@src
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: FROM (
  FROM src
  SELECT TRANSFORM(src.key, src.value)
         USING 'cat' AS (tkey, tvalue) 
  CLUSTER BY tkey 
) tmap
SELECT tmap.tkey, tmap.tvalue WHERE tmap.tkey < 100
POSTHOOK: type: QUERY
POSTHOOK: Input: cat
POSTHOOK: Input: default@src
POSTHOOK: Output: hdfs://### HDFS PATH ###
0	val_0
0	val_0
0	val_0
10	val_10
11	val_11
12	val_12
12	val_12
15	val_15
15	val_15
17	val_17
18	val_18
18	val_18
19	val_19
2	val_2
20	val_20
24	val_24
24	val_24
26	val_26
26	val_26
27	val_27
28	val_28
30	val_30
33	val_33
34	val_34
35	val_35
35	val_35
35	val_35
37	val_37
37	val_37
4	val_4
41	val_41
42	val_42
42	val_42
43	val_43
44	val_44
47	val_47
5	val_5
5	val_5
5	val_5
51	val_51
51	val_51
53	val_53
54	val_54
57	val_57
58	val_58
58	val_58
64	val_64
65	val_65
66	val_66
67	val_67
67	val_67
69	val_69
70	val_70
70	val_70
70	val_70
72	val_72
72	val_72
74	val_74
76	val_76
76	val_76
77	val_77
78	val_78
8	val_8
80	val_80
82	val_82
83	val_83
83	val_83
84	val_84
84	val_84
85	val_85
86	val_86
87	val_87
9	val_9
90	val_90
90	val_90
90	val_90
92	val_92
95	val_95
95	val_95
96	val_96
97	val_97
97	val_97
98	val_98
98	val_98
PREHOOK: query: EXPLAIN
FROM (
    FROM ( SELECT * FROM src ) mapout REDUCE * USING 'cat' AS x,y
) reduced
#### A masked pattern was here ####
PREHOOK: type: QUERY
PREHOOK: Input: cat
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
FROM (
    FROM ( SELECT * FROM src ) mapout REDUCE * USING 'cat' AS x,y
) reduced
#### A masked pattern was here ####
POSTHOOK: type: QUERY
POSTHOOK: Input: cat
POSTHOOK: Input: default@src
#### A masked pattern was here ####
Plan not optimized by CBO because the statement uses scripts

Stage-3
  Dependency Collection{}
    Stage-2
      Map 1
      File Output Operator [FS_6]
        Filter Operator [FIL_10] (rows=3 width=178)
          predicate:(_col0) IN ('a', 'b')
          Transform Operator [SCR_3] (rows=500 width=178)
            command:cat
            Select Operator [SEL_1] (rows=500 width=178)
              Output:["_col0","_col1"]
              TableScan [TS_0] (rows=500 width=178)
                default@src,src,Tbl:COMPLETE,Col:COMPLETE,Output:["key","value"]
      File Output Operator [FS_9]
        Filter Operator [FIL_11] (rows=3 width=178)
          predicate:(_col0) IN ('c', 'd')
           Please refer to the previous Transform Operator [SCR_3]
Stage-0
  Move Operator
     Please refer to the previous Stage-2
Stage-1
  Move Operator
     Please refer to the previous Stage-2

