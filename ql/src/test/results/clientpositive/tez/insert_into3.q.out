PREHOOK: query: DROP TABLE insert_into3a
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE insert_into3a
POSTHOOK: type: DROPTABLE
PREHOOK: query: DROP TABLE insert_into3b
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE insert_into3b
POSTHOOK: type: DROPTABLE
PREHOOK: query: CREATE TABLE insert_into3a (key int, value string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@insert_into3a
POSTHOOK: query: CREATE TABLE insert_into3a (key int, value string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@insert_into3a
PREHOOK: query: CREATE TABLE insert_into3b (key int, value string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@insert_into3b
POSTHOOK: query: CREATE TABLE insert_into3b (key int, value string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@insert_into3b
PREHOOK: query: EXPLAIN FROM src INSERT INTO TABLE insert_into3a SELECT * ORDER BY key, value LIMIT 50
                 INSERT INTO TABLE insert_into3b SELECT * ORDER BY key, value LIMIT 100
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@insert_into3a
PREHOOK: Output: default@insert_into3b
POSTHOOK: query: EXPLAIN FROM src INSERT INTO TABLE insert_into3a SELECT * ORDER BY key, value LIMIT 50
                 INSERT INTO TABLE insert_into3b SELECT * ORDER BY key, value LIMIT 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@insert_into3a
POSTHOOK: Output: default@insert_into3b
Plan not optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
Reducer 4 <- Map 1 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (CUSTOM_SIMPLE_EDGE)

Stage-4
  Stats Work{}
    Stage-0
      Move Operator
        table:{"name:":"default.insert_into3a"}
        Stage-3
          Dependency Collection{}
            Stage-2
              Reducer 3
              File Output Operator [FS_13]
                Group By Operator [GBY_11] (rows=1 width=880)
                  Output:["_col0","_col1"],aggregations:["compute_stats(VALUE._col0)","compute_stats(VALUE._col1)"]
                <-Reducer 2 [CUSTOM_SIMPLE_EDGE]
                  File Output Operator [FS_6]
                    table:{"name:":"default.insert_into3a"}
                    Select Operator [SEL_5] (rows=50 width=95)
                      Output:["_col0","_col1"]
                      Limit [LIM_4] (rows=50 width=178)
                        Number of rows:50
                        Select Operator [SEL_3] (rows=500 width=178)
                          Output:["_col0","_col1"]
                        <-Map 1 [SIMPLE_EDGE] vectorized
                          SHUFFLE [RS_33]
                            Select Operator [SEL_31] (rows=500 width=178)
                              Output:["_col0","_col1"]
                              Top N Key Operator [TNK_29] (rows=500 width=178)
                                keys:key, value,top n:50
                                TableScan [TS_0] (rows=500 width=178)
                                  default@src,src,Tbl:COMPLETE,Col:COMPLETE,Output:["key","value"]
                  PARTITION_ONLY_SHUFFLE [RS_10]
                    Group By Operator [GBY_9] (rows=1 width=864)
                      Output:["_col0","_col1"],aggregations:["compute_stats(key, 'hll')","compute_stats(value, 'hll')"]
                      Select Operator [SEL_8] (rows=50 width=95)
                        Output:["key","value"]
                         Please refer to the previous Select Operator [SEL_5]
              Reducer 5
              File Output Operator [FS_26]
                Group By Operator [GBY_24] (rows=1 width=880)
                  Output:["_col0","_col1"],aggregations:["compute_stats(VALUE._col0)","compute_stats(VALUE._col1)"]
                <-Reducer 4 [CUSTOM_SIMPLE_EDGE]
                  File Output Operator [FS_19]
                    table:{"name:":"default.insert_into3b"}
                    Select Operator [SEL_18] (rows=100 width=95)
                      Output:["_col0","_col1"]
                      Limit [LIM_17] (rows=100 width=178)
                        Number of rows:100
                        Select Operator [SEL_16] (rows=500 width=178)
                          Output:["_col0","_col1"]
                        <-Map 1 [SIMPLE_EDGE] vectorized
                          SHUFFLE [RS_34]
                            Select Operator [SEL_32] (rows=500 width=178)
                              Output:["_col0","_col1"]
                              Top N Key Operator [TNK_30] (rows=500 width=178)
                                keys:key, value,top n:100
                                 Please refer to the previous TableScan [TS_0]
                  PARTITION_ONLY_SHUFFLE [RS_23]
                    Group By Operator [GBY_22] (rows=1 width=864)
                      Output:["_col0","_col1"],aggregations:["compute_stats(key, 'hll')","compute_stats(value, 'hll')"]
                      Select Operator [SEL_21] (rows=100 width=95)
                        Output:["key","value"]
                         Please refer to the previous Select Operator [SEL_18]
Stage-5
  Stats Work{}
    Stage-1
      Move Operator
        table:{"name:":"default.insert_into3b"}
         Please refer to the previous Stage-3

PREHOOK: query: FROM src INSERT INTO TABLE insert_into3a SELECT * ORDER BY key, value LIMIT 50
         INSERT INTO TABLE insert_into3b SELECT * ORDER BY key, value LIMIT 100
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@insert_into3a
PREHOOK: Output: default@insert_into3b
POSTHOOK: query: FROM src INSERT INTO TABLE insert_into3a SELECT * ORDER BY key, value LIMIT 50
         INSERT INTO TABLE insert_into3b SELECT * ORDER BY key, value LIMIT 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@insert_into3a
POSTHOOK: Output: default@insert_into3b
POSTHOOK: Lineage: insert_into3a.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: insert_into3a.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: insert_into3b.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: insert_into3b.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: SELECT SUM(HASH(c)) FROM (
    SELECT TRANSFORM(*) USING 'tr \t _' AS (c) FROM insert_into3a
) t
PREHOOK: type: QUERY
PREHOOK: Input: default@insert_into3a
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT SUM(HASH(c)) FROM (
    SELECT TRANSFORM(*) USING 'tr \t _' AS (c) FROM insert_into3a
) t
POSTHOOK: type: QUERY
POSTHOOK: Input: default@insert_into3a
POSTHOOK: Output: hdfs://### HDFS PATH ###
-1254133670
PREHOOK: query: SELECT SUM(HASH(c)) FROM (
    SELECT TRANSFORM(*) USING 'tr \t _' AS (c) FROM insert_into3b
) t
PREHOOK: type: QUERY
PREHOOK: Input: default@insert_into3b
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT SUM(HASH(c)) FROM (
    SELECT TRANSFORM(*) USING 'tr \t _' AS (c) FROM insert_into3b
) t
POSTHOOK: type: QUERY
POSTHOOK: Input: default@insert_into3b
POSTHOOK: Output: hdfs://### HDFS PATH ###
-1142373758
PREHOOK: query: EXPLAIN FROM src INSERT OVERWRITE TABLE insert_into3a SELECT * LIMIT 10
                 INSERT INTO TABLE insert_into3b SELECT * LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@insert_into3a
PREHOOK: Output: default@insert_into3b
POSTHOOK: query: EXPLAIN FROM src INSERT OVERWRITE TABLE insert_into3a SELECT * LIMIT 10
                 INSERT INTO TABLE insert_into3b SELECT * LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@insert_into3a
POSTHOOK: Output: default@insert_into3b
Plan not optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
Reducer 4 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (CUSTOM_SIMPLE_EDGE)

Stage-4
  Stats Work{}
    Stage-0
      Move Operator
        table:{"name:":"default.insert_into3a"}
        Stage-3
          Dependency Collection{}
            Stage-2
              Reducer 3
              File Output Operator [FS_14]
                Group By Operator [GBY_12] (rows=1 width=880)
                  Output:["_col0","_col1"],aggregations:["compute_stats(VALUE._col0)","compute_stats(VALUE._col1)"]
                <-Reducer 2 [CUSTOM_SIMPLE_EDGE]
                  File Output Operator [FS_7]
                    table:{"name:":"default.insert_into3a"}
                    Select Operator [SEL_6] (rows=10 width=95)
                      Output:["_col0","_col1"]
                      Limit [LIM_5] (rows=10 width=178)
                        Number of rows:10
                        Select Operator [SEL_4] (rows=10 width=178)
                          Output:["_col0","_col1"]
                        <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized
                          PARTITION_ONLY_SHUFFLE [RS_33]
                            Limit [LIM_31] (rows=10 width=178)
                              Number of rows:10
                              Select Operator [SEL_29] (rows=500 width=178)
                                Output:["_col0","_col1"]
                                TableScan [TS_0] (rows=500 width=178)
                                  default@src,src,Tbl:COMPLETE,Col:COMPLETE,Output:["key","value"]
                  PARTITION_ONLY_SHUFFLE [RS_11]
                    Group By Operator [GBY_10] (rows=1 width=864)
                      Output:["_col0","_col1"],aggregations:["compute_stats(key, 'hll')","compute_stats(value, 'hll')"]
                      Select Operator [SEL_9] (rows=10 width=95)
                        Output:["key","value"]
                         Please refer to the previous Select Operator [SEL_6]
              Reducer 5
              File Output Operator [FS_28]
                Group By Operator [GBY_26] (rows=1 width=880)
                  Output:["_col0","_col1"],aggregations:["compute_stats(VALUE._col0)","compute_stats(VALUE._col1)"]
                <-Reducer 4 [CUSTOM_SIMPLE_EDGE]
                  File Output Operator [FS_21]
                    table:{"name:":"default.insert_into3b"}
                    Select Operator [SEL_20] (rows=10 width=95)
                      Output:["_col0","_col1"]
                      Limit [LIM_19] (rows=10 width=178)
                        Number of rows:10
                        Select Operator [SEL_18] (rows=10 width=178)
                          Output:["_col0","_col1"]
                        <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized
                          PARTITION_ONLY_SHUFFLE [RS_34]
                            Limit [LIM_32] (rows=10 width=178)
                              Number of rows:10
                              Select Operator [SEL_30] (rows=500 width=178)
                                Output:["_col0","_col1"]
                                 Please refer to the previous TableScan [TS_0]
                  PARTITION_ONLY_SHUFFLE [RS_25]
                    Group By Operator [GBY_24] (rows=1 width=864)
                      Output:["_col0","_col1"],aggregations:["compute_stats(key, 'hll')","compute_stats(value, 'hll')"]
                      Select Operator [SEL_23] (rows=10 width=95)
                        Output:["key","value"]
                         Please refer to the previous Select Operator [SEL_20]
Stage-5
  Stats Work{}
    Stage-1
      Move Operator
        table:{"name:":"default.insert_into3b"}
         Please refer to the previous Stage-3

PREHOOK: query: FROM src INSERT OVERWRITE TABLE insert_into3a SELECT * LIMIT 10
         INSERT INTO TABLE insert_into3b SELECT * LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@insert_into3a
PREHOOK: Output: default@insert_into3b
POSTHOOK: query: FROM src INSERT OVERWRITE TABLE insert_into3a SELECT * LIMIT 10
         INSERT INTO TABLE insert_into3b SELECT * LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@insert_into3a
POSTHOOK: Output: default@insert_into3b
POSTHOOK: Lineage: insert_into3a.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: insert_into3a.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: insert_into3b.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: insert_into3b.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: SELECT SUM(HASH(c)) FROM (
    SELECT TRANSFORM(*) USING 'tr \t _' AS (c) FROM insert_into3a
) t
PREHOOK: type: QUERY
PREHOOK: Input: default@insert_into3a
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT SUM(HASH(c)) FROM (
    SELECT TRANSFORM(*) USING 'tr \t _' AS (c) FROM insert_into3a
) t
POSTHOOK: type: QUERY
POSTHOOK: Input: default@insert_into3a
POSTHOOK: Output: hdfs://### HDFS PATH ###
-826625916
PREHOOK: query: SELECT SUM(HASH(c)) FROM (
    SELECT TRANSFORM(*) USING 'tr \t _' AS (c) FROM insert_into3b
) t
PREHOOK: type: QUERY
PREHOOK: Input: default@insert_into3b
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT SUM(HASH(c)) FROM (
    SELECT TRANSFORM(*) USING 'tr \t _' AS (c) FROM insert_into3b
) t
POSTHOOK: type: QUERY
POSTHOOK: Input: default@insert_into3b
POSTHOOK: Output: hdfs://### HDFS PATH ###
-1968999674
PREHOOK: query: DROP TABLE insert_into3a
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@insert_into3a
PREHOOK: Output: default@insert_into3a
POSTHOOK: query: DROP TABLE insert_into3a
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@insert_into3a
POSTHOOK: Output: default@insert_into3a
PREHOOK: query: DROP TABLE insert_into3b
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@insert_into3b
PREHOOK: Output: default@insert_into3b
POSTHOOK: query: DROP TABLE insert_into3b
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@insert_into3b
POSTHOOK: Output: default@insert_into3b
